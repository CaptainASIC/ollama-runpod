#!/bin/bash
# scripts/configure-timeout.sh - Script to configure the auto-shutdown timeout

# Define color codes for better output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Create config directory if it doesn't exist
mkdir -p /workspace/config

# Default timeout is 60 seconds (1 minute)
DEFAULT_TIMEOUT=60

# Get current timeout
get_current_timeout() {
    if [ -f "/workspace/config/runtime.env" ]; then
        grep -q "INACTIVITY_TIMEOUT=" /workspace/config/runtime.env
        if [ $? -eq 0 ]; then
            current=$(grep "INACTIVITY_TIMEOUT=" /workspace/config/runtime.env | cut -d= -f2)
            echo "$current"
            return
        fi
    fi
    
    # Check environment variable if file doesn't exist or doesn't contain the setting
    if [ -n "$INACTIVITY_TIMEOUT" ]; then
        echo "$INACTIVITY_TIMEOUT"
        return
    fi
    
    # Return default
    echo "$DEFAULT_TIMEOUT"
}

CURRENT_TIMEOUT=$(get_current_timeout)

# Check if an argument was provided
if [ $# -eq 0 ]; then
    echo -e "${BLUE}Usage: $0 <timeout_in_seconds>${NC}"
    echo -e "${BLUE}Example: $0 300  # to set timeout to 5 minutes${NC}"
    echo -e "${GREEN}Current timeout is set to: ${CURRENT_TIMEOUT} seconds${NC}"
    exit 0
fi

# Get the new timeout value
NEW_TIMEOUT=$1

# Validate that it's a positive number
if ! [[ "$NEW_TIMEOUT" =~ ^[0-9]+$ ]] || [ "$NEW_TIMEOUT" -eq 0 ]; then
    echo -e "${YELLOW}Error: Timeout must be a positive number of seconds.${NC}"
    exit 1
fi

# Update the timeout in the configuration file
if [ -f "/workspace/config/runtime.env" ]; then
    # Check if INACTIVITY_TIMEOUT already exists in the file
    grep -q "INACTIVITY_TIMEOUT=" /workspace/config/runtime.env
    if [ $? -eq 0 ]; then
        # Replace existing setting
        sed -i "s/INACTIVITY_TIMEOUT=.*/INACTIVITY_TIMEOUT=$NEW_TIMEOUT/" /workspace/config/runtime.env
    else
        # Add to file
        echo "INACTIVITY_TIMEOUT=$NEW_TIMEOUT" >> /workspace/config/runtime.env
    fi
else
    # Create new file
    echo "INACTIVITY_TIMEOUT=$NEW_TIMEOUT" > /workspace/config/runtime.env
    echo "# Runtime configuration generated by configure-timeout.sh" >> /workspace/config/runtime.env
fi

# Update environment variable for current session
export INACTIVITY_TIMEOUT=$NEW_TIMEOUT

echo -e "${GREEN}Auto-shutdown timeout has been updated to $NEW_TIMEOUT seconds.${NC}"

# Restart the auto-shutdown monitor
echo -e "${BLUE}Restarting auto-shutdown monitor...${NC}"
pkill -f "bash /workspace/scripts/auto-shutdown.sh" || true
bash /workspace/scripts/auto-shutdown.sh > /workspace/logs/autoshutdown.log 2>&1 &

echo -e "${GREEN}Auto-shutdown monitor restarted. Pod will shut down after $NEW_TIMEOUT seconds of inactivity.${NC}"